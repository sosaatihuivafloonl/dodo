{"ast":null,"code":"\"use strict\";\n\n/*\n * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\n * */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matches = void 0;\nfunction matchesRange(cardNumber, min, max) {\n  var maxLengthToCheck = String(min).length;\n  var substr = cardNumber.substr(0, maxLengthToCheck);\n  var integerRepresentationOfCardNumber = parseInt(substr, 10);\n  min = parseInt(String(min).substr(0, substr.length), 10);\n  max = parseInt(String(max).substr(0, substr.length), 10);\n  return integerRepresentationOfCardNumber >= min && integerRepresentationOfCardNumber <= max;\n}\nfunction matchesPattern(cardNumber, pattern) {\n  pattern = String(pattern);\n  return pattern.substring(0, cardNumber.length) === cardNumber.substring(0, pattern.length);\n}\nfunction matches(cardNumber, pattern) {\n  if (Array.isArray(pattern)) {\n    return matchesRange(cardNumber, pattern[0], pattern[1]);\n  }\n  return matchesPattern(cardNumber, pattern);\n}\nexports.matches = matches;","map":{"version":3,"names":["Object","defineProperty","exports","value","matches","matchesRange","cardNumber","min","max","maxLengthToCheck","String","length","substr","integerRepresentationOfCardNumber","parseInt","matchesPattern","pattern","substring","Array","isArray"],"sources":["C:/crs/frontend/sell/node_modules/credit-card-type/dist/lib/matches.js"],"sourcesContent":["\"use strict\";\n/*\n * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\n * */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matches = void 0;\nfunction matchesRange(cardNumber, min, max) {\n    var maxLengthToCheck = String(min).length;\n    var substr = cardNumber.substr(0, maxLengthToCheck);\n    var integerRepresentationOfCardNumber = parseInt(substr, 10);\n    min = parseInt(String(min).substr(0, substr.length), 10);\n    max = parseInt(String(max).substr(0, substr.length), 10);\n    return (integerRepresentationOfCardNumber >= min &&\n        integerRepresentationOfCardNumber <= max);\n}\nfunction matchesPattern(cardNumber, pattern) {\n    pattern = String(pattern);\n    return (pattern.substring(0, cardNumber.length) ===\n        cardNumber.substring(0, pattern.length));\n}\nfunction matches(cardNumber, pattern) {\n    if (Array.isArray(pattern)) {\n        return matchesRange(cardNumber, pattern[0], pattern[1]);\n    }\n    return matchesPattern(cardNumber, pattern);\n}\nexports.matches = matches;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,SAASC,YAAYA,CAACC,UAAU,EAAEC,GAAG,EAAEC,GAAG,EAAE;EACxC,IAAIC,gBAAgB,GAAGC,MAAM,CAACH,GAAG,CAAC,CAACI,MAAM;EACzC,IAAIC,MAAM,GAAGN,UAAU,CAACM,MAAM,CAAC,CAAC,EAAEH,gBAAgB,CAAC;EACnD,IAAII,iCAAiC,GAAGC,QAAQ,CAACF,MAAM,EAAE,EAAE,CAAC;EAC5DL,GAAG,GAAGO,QAAQ,CAACJ,MAAM,CAACH,GAAG,CAAC,CAACK,MAAM,CAAC,CAAC,EAAEA,MAAM,CAACD,MAAM,CAAC,EAAE,EAAE,CAAC;EACxDH,GAAG,GAAGM,QAAQ,CAACJ,MAAM,CAACF,GAAG,CAAC,CAACI,MAAM,CAAC,CAAC,EAAEA,MAAM,CAACD,MAAM,CAAC,EAAE,EAAE,CAAC;EACxD,OAAQE,iCAAiC,IAAIN,GAAG,IAC5CM,iCAAiC,IAAIL,GAAG;AAChD;AACA,SAASO,cAAcA,CAACT,UAAU,EAAEU,OAAO,EAAE;EACzCA,OAAO,GAAGN,MAAM,CAACM,OAAO,CAAC;EACzB,OAAQA,OAAO,CAACC,SAAS,CAAC,CAAC,EAAEX,UAAU,CAACK,MAAM,CAAC,KAC3CL,UAAU,CAACW,SAAS,CAAC,CAAC,EAAED,OAAO,CAACL,MAAM,CAAC;AAC/C;AACA,SAASP,OAAOA,CAACE,UAAU,EAAEU,OAAO,EAAE;EAClC,IAAIE,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,EAAE;IACxB,OAAOX,YAAY,CAACC,UAAU,EAAEU,OAAO,CAAC,CAAC,CAAC,EAAEA,OAAO,CAAC,CAAC,CAAC,CAAC;EAC3D;EACA,OAAOD,cAAc,CAACT,UAAU,EAAEU,OAAO,CAAC;AAC9C;AACAd,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}